WEB DEVELOPMENT CODECADEMY:

-----LECCION 1----- 
INTRO TO THE BOX MODEL: The box model comprises the set of properties that define parts of an element that 
take up space on a web page. The model includes the content area’s size (width and height) and the element’s 
padding, border, and margin. The properties include:
1. width and height: The width and height of the content area.
2. padding: The amount of space between the content area and the border.
3. border: The thickness and style of the border surrounding the content area and padding.
4. margin: The amount of space between the border and the outside edge of the element.

HEIGHT AND WIDTH: By default, the dimensions of an HTML box are set to hold the raw contents of the box.
The CSS height and width properties can be used to modify these default dimensions.

The 'px' in the code stands for pixels. Pixels allow you to set the exact size of an element’s box 
(width and height). When the width and height of an element are set in pixels, it will be the same size on 
all devices — an element that fills a laptop screen will overflow a mobile screen.

BORDERS: A border is a line that surrounds an element, like a frame around a painting. Borders can be set with
a specific width, style, and color:
1. width- The thickness of the border. A border’s thickness can be set in pixels or with one of the following 
keywords: thin, medium, or thick.
2. style- The design of the border. Web browsers can render any of 10 different styles. Some of these styles 
include: none, dotted, and solid.
3. color- The color of the border. Web browsers can render colors using a few different formats, including 140 
built-in color keywords.

BORDER RADIUS: Thanks to CSS, a border doesn’t have to be square.
You can modify the corners of an element’s border box with the border-radius property.
EJ:
div.container {
  border: 3px solid blue;
  border-radius: 5px;
}

PADDING: The space between the contents of a box and the borders of a box is known as padding. Padding is like 
the space between a picture and the frame surrounding it. 
If you want to be more specific about the amount of padding on each side of a box’s content, you can use the 
following properties: padding-top; padding-right; padding-bottom; padding-left

PADDING SHORTHAND: Another implementation that lets you specify exactly how much padding there should be on 
each side of the content in a single declaration.

You can specify these properties in a few different ways:

- 4 Values: 
p.content-header {
  padding: 6px 11px 4px 9px;
}
In order, it specifies the padding-top value (6px), the padding-right value (11px), 
the padding-bottom value (4px), and the padding-left value (9px) of the content.

- 3 Values: 
p.content-header {
  padding: 5px 10px 20px;
}
If the left and right sides of the content are equal. The first value sets the padding-top value (5px), 
the second value sets the padding-left and padding-right values (10px), and the third one sets the 
padding-bottom value (20px).

- 2 Values: 
p.content-header {
  padding: 5px 10px;
}
If the top and bottom sides can be equal, and the left and right sides can be equal, we specify 2 values. 
The first one sets the padding-top and padding-bottom values (5px), and the second one sets the padding-left 
and padding-right values (10px).

MARGIN: Refers to the space directly outside of the box. The margin property is used to specify the size 
of this space.

MARGIN SHORTHAND: The shorthand syntax for margins is the same as padding.

AUTO: The margin property also lets you center content. However, you must follow a few syntax requirements.
div.headline {
  width: 400px;
  margin: 0 auto;
}
The 0 sets the top and bottom margins to 0 pixels. The auto value instructs the browser to adjust the left 
and right margins until the element is centered within its containing element.
In order to center an element, a width must be set for that element.

MARGIN COLLAPSE: Padding is space added inside an element’s border, while margin is space added outside an 
element’s border. One additional difference is that top and bottom margins, also called vertical margins, 
collapse, while top and bottom padding does not. Horizontal margins (left and right), like padding, are 
always displayed and added together. Unlike horizontal margins, vertical margins do not add. Instead, the 
larger of the two vertical margins sets the distance between adjacent elements.


MINIMUM NAD MAXIMUM HEIGHT AND WIDTH: Content, like text, can become difficult to read when a browser window 
is narrowed or expanded. These two properties ensure that content is legible by limiting the minimum and 
maximum widths of an element.

OVERFLOW: The overflow property controls what happens to content that spills, or overflows, outside its box. 
The overflow property is set on a parent element to instruct a web browser on how to render child elements.
The most commonly used values are:
1. hidden — when set to this value, any content that overflows will be hidden from view.
2. scroll — when set to this value, a scrollbar will be added to the element’s box so that the rest of the 
content can be viewed by scrolling.
3. visible — when set to this value, the overflow content will be displayed outside of the containing element. 
Note, this is the default value.

RESETTING DEFAULTS:
* {
  margin: 0;
  padding: 0;
}
The code in the example above resets the default margin and padding values of all HTML elements. 
It is often the first CSS rule in an external stylesheet.

VISIBILITY: Elements can be hidden from view with the visibility property.
The visibility property can be set to one of the following values:
hidden — hides an element.
visible — displays an element.
collapse — collapses an element.


